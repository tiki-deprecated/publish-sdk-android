// from https://github.com/flutter/flutter/blob/master/packages/flutter_tools/gradle/app_plugin_loader.gradle

import groovy.json.JsonSlurper
import org.gradle.api.Project

public void load(Project rootProject) {

    def flutterProjectRoot = rootProject.projectDir.parentFile

// Note: if this logic is changed, also change the logic in module_plugin_loader.gradle.
    def pluginsFile = new File(flutterProjectRoot, '.flutter-plugins-dependencies')
    if (!pluginsFile.exists()) {
        return
    }

    def object = new JsonSlurper().parseText(pluginsFile.text)
    assert object instanceof Map
    assert object.plugins instanceof Map
    assert object.plugins.android instanceof List
// Includes the Flutter plugins that support the Android platform.
    object.plugins.android.each { androidPlugin ->
        assert androidPlugin.name instanceof String
        assert androidPlugin.path instanceof String
        // Skip plugins that have no native build (such as a Dart-only implementation
        // of a federated plugin).
        def needsBuild = androidPlugin.containsKey('native_build') ? androidPlugin['native_build'] : true
        if (!needsBuild) {
            return
        }
        def pluginDirectory = new File(androidPlugin.path, 'android')
        assert pluginDirectory.exists()
        include ":${androidPlugin.name}"
        project(":${androidPlugin.name}").projectDir = pluginDirectory
    }
}